# neuroforge/agents/qa.py (VERS√ÉO ATUALIZADA)

from .base import BaseAgent
from neuroforge.integrations.gemini import GeminiClient
import re # Usaremos regex para encontrar o nome da fun√ß√£o

class LogicQA(BaseAgent):
    """
    O agente LogicQA √© o especialista em qualidade e testes.
    Ele recebe um bloco de c√≥digo e gera testes unit√°rios para ele.
    """
    def __init__(self):
        """
        Inicializa o agente LogicQA e o cliente Gemini.
        """
        self.gemini_client = GeminiClient()

    def _extrair_nome_funcao(self, source_code: str) -> str:
        """
        Uma fun√ß√£o auxiliar para extrair o nome da primeira fun√ß√£o definida no c√≥digo.
        """
        match = re.search(r'def\s+(\w+)\s*\(', source_code)
        if match:
            return match.group(1)
        return "funcao_desconhecida" # Retorna um nome padr√£o se n√£o encontrar

    def run(self, source_code: str) -> str:
        """
        Executa uma tarefa de gera√ß√£o de testes.

        Args:
            source_code (str): O c√≥digo fonte para o qual os testes devem ser gerados.

        Returns:
            str: O c√≥digo dos testes unit√°rios gerados.
        """
        print(f"ü§ñ Agente LogicQA recebeu o c√≥digo para testar.")
        
        function_name = self._extrair_nome_funcao(source_code)
        module_name = "codigo_gerado" # O nome do ficheiro onde o c√≥digo ser√° guardado

        print(f"‚ö°Ô∏è A contactar a IA para gerar os testes para a fun√ß√£o '{function_name}'...")

        test_generation_prompt = f"""
        Voc√™ √© um engenheiro de QA (Quality Assurance) especialista em Python.
        Sua tarefa √© criar testes unit√°rios rigorosos para uma fun√ß√£o que est√° no m√≥dulo '{module_name}.py'.
        A fun√ß√£o a ser testada √© '{function_name}'.

        O c√≥digo da fun√ß√£o √© o seguinte:
        ---
        {source_code}
        ---

        Por favor, gere um script de teste completo usando a biblioteca 'unittest' que importe a fun√ß√£o '{function_name}' do m√≥dulo '{module_name}'.
        O seu output deve ser APENAS o c√≥digo Python do teste, pronto para ser executado. N√ÉO inclua a defini√ß√£o da fun√ß√£o no seu c√≥digo de teste.
        """
        
        generated_tests = self.gemini_client.generate_code(test_generation_prompt)
        
        print("‚úÖ Testes gerados com sucesso!")
        return f"--- TESTES GERADOS PELO LOGICQA ---\n\n{generated_tests}"