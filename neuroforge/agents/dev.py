# neuroforge/agents/dev.py (VERS√ÉO ATUALIZADA)

from .base import BaseAgent
from neuroforge.integrations.gemini import GeminiClient

class NeoDev(BaseAgent):
    """
    O agente NeoDev agora pode tanto criar c√≥digo do zero quanto
    modificar c√≥digo existente, dando-lhe "mem√≥ria de contexto".
    """
    def __init__(self):
        self.gemini_client = GeminiClient()

    def run(self, task: str, existing_code: str = "") -> str:
        """
        Executa uma tarefa de desenvolvimento. Se 'existing_code' for fornecido,
        a tarefa ser√° modificar esse c√≥digo.

        Args:
            task (str): A descri√ß√£o da tarefa a ser executada.
            existing_code (str, optional): O c√≥digo existente a ser modificado.

        Returns:
            str: O c√≥digo completo e atualizado.
        """
        print(f"ü§ñ Agente NeoDev recebeu a tarefa: {task}")

        if existing_code:
            print("   (Contexto: A modificar c√≥digo existente)")
            prompt = f"""
            Voc√™ √© um programador de IA de elite. Sua tarefa √© modificar ou adicionar funcionalidades a um c√≥digo Python existente.
            N√ÉO remova funcionalidades existentes, a menos que a tarefa pe√ßa explicitamente.
            Retorne APENAS o ficheiro de c√≥digo completo e atualizado.

            C√ìDIGO EXISTENTE:
            ---
            {existing_code}
            ---

            TAREFA DE MODIFICA√á√ÉO: "{task}"
            """
        else:
            print("   (Contexto: A criar novo ficheiro de c√≥digo)")
            prompt = f"""
            Voc√™ √© um assistente de programa√ß√£o de elite.
            Sua tarefa √© gerar o c√≥digo Python para o seguinte pedido: "{task}"
            O c√≥digo deve ser limpo, eficiente e bem documentado.
            Gere apenas o bloco de c√≥digo, sem explica√ß√µes adicionais.
            """

        print("‚ö°Ô∏è A contactar a IA para gerar/modificar o c√≥digo...")
        generated_code = self.gemini_client.generate_code(prompt)
        print("‚úÖ C√≥digo gerado/modificado com sucesso!")
        return generated_code