# neuroforge/main.py

import argparse
import asyncio
from engine.orchestrator import Orchestrator

def main():
    """
    Ponto de entrada principal para a aplica√ß√£o NeuroForge.
    
    Esta fun√ß√£o configura e executa o orquestrador principal da IA.
    """
    # 1. Configura√ß√£o de Argumentos
    # Usamos argparse para permitir a passagem de par√¢metros via linha de comando.
    # Por exemplo, poder√≠amos passar o caminho de um projeto: `python main.py --project /path/to/project`
    parser = argparse.ArgumentParser(description="NeuroForge - Assistente de Desenvolvimento com IA Aut√¥noma")
    parser.add_argument("--project", type=str, help="Caminho para o diret√≥rio do projeto a ser trabalhado.")
    parser.add_argument("--task", type=str, help="Uma tarefa espec√≠fica para a IA executar.")
    
    args = parser.parse_args()

    print("üöÄ Iniciando NeuroForge X Ultimate v3.0...")

    # 2. Inicializa√ß√£o do Orquestrador
    # O Orchestrator ser√° a pe√ßa central que gerencia os agentes e o fluxo de trabalho.
    try:
        orchestrator = Orchestrator(project_path=args.project)
        
        # 3. Execu√ß√£o do Loop Principal
        # Usamos asyncio para lidar com opera√ß√µes ass√≠ncronas, como monitorar
        # a atividade do usu√°rio e executar tarefas em segundo plano.
        asyncio.run(orchestrator.start_main_loop(initial_task=args.task))

    except KeyboardInterrupt:
        print("\nüõë NeuroForge desligado pelo usu√°rio.")
    except Exception as e:
        print(f"\n‚ùå Erro cr√≠tico no NeuroForge: {e}")
    
    print("NeuroForge finalizado.")

if __name__ == "__main__":
    # Este √© um padr√£o em Python. O c√≥digo dentro deste `if` s√≥ √© executado
    # quando o script √© chamado diretamente (ex: `python main.py`).
    # Ele n√£o executa se o arquivo for importado por outro script.
    main()